spring:
  profiles:
    active: telegram, slack
  datasource:
    driver-class-name: org.postgresql.Driver
    initialization-mode: never
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update
heroku:
  server:
    hour:
      offset: 3
telegram:
  bot:
    admin: 87971601
    cron: 0 0 9 * * MON-FRI
slack:
  customer:
    cron: 0 0 9 * * MON-FRI
  employee:
    birthday:
      dailyCron: 0 0 9 * * MON-FRI
      monthlyCron: 0 0 9 1 * ?
json:
  customer:
    url: ${CUSTOMER_URL}
    cron: 0 30 8 * * MON-FRI
  employee:
    url: ${EMPLOYEE_URL}
    cron: 0 30 3 * * MON-FRI
moex:
  url: https://iss.moex.com//iss/statistics/engines/currency/markets/selt/rates
  usd: CBRF_USD_LAST (double)
  eur: CBRF_EUR_LAST (double)
logging:
  level:
    com.whiskels.telegrambot: info
---
spring:
  profiles: test
  datasource:
    #           Test database
    url: jdbc:postgresql://localhost:5432/telegram_bot_test
    username: user
    password: password
telegram:
  bot:
    name: TelegramNotifierBot
    token:
slack:
  customer:
    webhook:
  employee:
    birthday:
      webhook:
---
spring:
  profiles: telegram
  datasource:
    url: ${JDBC_DATABASE_URL}
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
telegram:
  bot:
    name: ${BOT_NAME}
    token: ${BOT_TOKEN}
---
spring:
  profiles: slack
slack:
  customer:
    webhook: ${CUSTOMER_SLACK_WEBHOOK}
  employee:
    birthday:
      webhook: ${EMPLOYEE_BIRTHDAY_SLACK_WEBHOOK}
