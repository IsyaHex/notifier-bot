spring:
  profiles.active: test
heroku.server.hour.offset: 3
telegram:
  bot:
    admin: 87971601
    cron: 0 0 9 * * MON-FRI
slack:
  customer:
    cron: 0 0 10 * * MON-FRI
  employee:
    birthday:
      dailyCron: 0 0 9 * * MON-FRI
      monthlyCron: 0 0 9 1 * ?
json:
  customer:
    url:
    cron: 0 30 8 * * MON-FRI
  employee:
    url:
    cron: 0 30 3 * * MON-FRI
moex:
  url: https://iss.moex.com//iss/statistics/engines/currency/markets/selt/rates
  usd: CBRF_USD_LAST (double)
  eur: CBRF_EUR_LAST (double)
---
# War includes telegram bot and slack webhook notifications
spring:
  profiles: war
  profiles.include: telegram, slack
---
spring:
  profiles: test
  profiles.include: telegram-test, slack-test
---
spring:
  profiles: telegram
  profiles.include: telegram-db
  datasource:
    url: ${JDBC_DATABASE_URL}
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
telegram:
  bot:
    name: ${BOT_NAME}
    token: ${BOT_TOKEN}
---
spring:
  profiles: slack
slack:
  customer.webhook: ${CUSTOMER_SLACK_WEBHOOK}
  employee.birthday.webhook: ${EMPLOYEE_BIRTHDAY_SLACK_WEBHOOK}
---
spring:
  profiles: telegram-test
  profiles.include: telegram-db
  datasource:
    # Test database
    url: jdbc:postgresql://localhost:5432/telegram_bot_test
    username: user
    password: password
telegram:
  bot:
    name: TelegramNotifierBot
    token:
---
spring:
  profiles: slack-test
slack:
  customer.webhook:
  employee.birthday.webhook:
---
spring:
  profiles: telegram-db
  datasource:
    driver-class-name: org.postgresql.Driver
    initialization-mode: never
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update
---
spring:
  profiles: no-db
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
